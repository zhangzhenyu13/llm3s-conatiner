name: "ensemblebloom"
platform: "ensemble"
max_batch_size: 4
input [
  {
    name: "input_ids"
    data_type: TYPE_UINT32
    dims: [ -1 ]
  },
  {
   name: "input_lengths"
   data_type: TYPE_UINT32
   dims: [ 1 ]
  },
  {
   name: "request_output_len"
   data_type: TYPE_UINT32
   dims: [ 1 ]
  },
  {
    name: "stop_words_list"
    data_type: TYPE_INT32
    dims: [ 2, -1 ]
  },
  {
   name: "bad_words_list"
   data_type: TYPE_INT32
   dims: [ 2, -1 ]
  },
  {
    name: "runtime_top_k"
    data_type: TYPE_UINT32
    dims: [ 1 ]
    optional: true
  },
  {
    name: "runtime_top_p"
    data_type: TYPE_FP32
    dims: [ 1 ]
    optional: true
  },
  {
    name: "beam_search_diversity_rate"
    data_type: TYPE_FP32
    dims: [ 1 ]
    optional: true
  },
  {
    name: "temperature"
    data_type: TYPE_FP32
    dims: [ 1 ]
    optional: true
  },
  {
    name: "len_penalty"
    data_type: TYPE_FP32
    dims: [ 1 ]
    optional: true
  },
  {
    name: "repetition_penalty"
    data_type: TYPE_FP32
    dims: [ 1 ]
    optional: true
  },
  {
    name: "random_seed"
    data_type: TYPE_UINT64
    dims: [ 1 ]
    optional: true
  },
  {
    name: "is_return_log_probs"
    data_type: TYPE_BOOL
    dims: [ 1 ]
    optional: true
  },
  {
    name: "beam_width"
    data_type: TYPE_UINT32
    dims: [ 1 ]
    optional: true
  },
  {
    name: "start_id"
    data_type: TYPE_UINT32
    dims: [ 1 ]
    optional: true
  },
  {
    name: "end_id"
    data_type: TYPE_UINT32
    dims: [ 1 ]
    optional: true
  },
  {
    name: "prompt_learning_task_name_ids"
    data_type: TYPE_UINT32
    dims: [ 1 ]
    optional: true
  },
  {
    name: "request_prompt_embedding"
    data_type: TYPE_FP16
    dims: [ -1, -1 ]
    optional: true
  },
  {
    name: "request_prompt_lengths"
    data_type: TYPE_UINT32
    dims: [ 1 ]
    optional: true
  },
  {
    name: "request_prompt_type"
    data_type: TYPE_UINT32
    dims: [ 1 ]
    optional: true
  },
  {
    name: "top_p_decay"
    data_type: TYPE_FP32
    dims: [ 1 ]
    optional: true
  },
  {
    name: "top_p_min"
    data_type: TYPE_FP32
    dims: [ 1 ]
    optional: true
  },
  {
    name: "top_p_reset_ids"
    data_type: TYPE_UINT32
    dims: [ 1 ]
    optional: true
  }
]
output [
  {
    name: "output_ids"
    data_type: TYPE_UINT32
    dims: [ -1, -1 ]
  },
  {
    name: "sequence_length"
    data_type: TYPE_UINT32
    dims: [ -1 ]
  },
  {
    name: "response_input_lengths"
    data_type: TYPE_INT32
    dims: [ -1 ]
  },
  {
    name: "cum_log_probs"
    data_type: TYPE_FP32
    dims: [ -1 ]
  },
  {
    name: "output_log_probs"
    data_type: TYPE_FP32
    dims: [ -1, -1 ]
  }
]
ensemble_scheduling {
  step [
    {
      model_name: "fastertransformer"
      model_version: -1
      input_map {
        key: "input_ids"
        value: "input_ids"
      }
      input_map {
        key: "input_lengths"
        value: "input_lengths"
      }
      input_map {
        key: "request_output_len"
        value: "request_output_len"
      }
      input_map {
        key: "prompt_learning_task_name_ids"
        value: "prompt_learning_task_name_ids"
      }
      input_map {
        key: "request_prompt_embedding"
        value: "request_prompt_embedding"
      }
      input_map {
        key: "request_prompt_lengths"
        value: "request_prompt_lengths"
      }
      input_map {
        key: "request_prompt_type"
        value: "request_prompt_type"
      }
      input_map {
          key: "runtime_top_k"
          value: "runtime_top_k"
      }
      input_map {
          key: "runtime_top_p"
          value: "runtime_top_p"
      }
      input_map {
          key: "beam_search_diversity_rate"
          value: "beam_search_diversity_rate"
      }
      input_map {
          key: "temperature"
          value: "temperature"
      }
      input_map {
          key: "len_penalty"
          value: "len_penalty"
      }
      input_map {
          key: "repetition_penalty"
          value: "repetition_penalty"
      }
      input_map {
          key: "random_seed"
          value: "random_seed"
      }
      input_map {
          key: "is_return_log_probs"
          value: "is_return_log_probs"
      }
      input_map {
          key: "beam_width"
          value: "beam_width"
      }
      input_map {
          key: "start_id"
          value: "start_id"
      }
      input_map {
          key: "end_id"
          value: "end_id"
      }
      input_map {
          key: "stop_words_list"
          value: "stop_words_list"
      }
      input_map {
          key: "bad_words_list"
          value: "bad_words_list"
      }
      input_map {
        key: "top_p_decay"
        value: "top_p_decay"
      }
      input_map {
        key: "top_p_min"
        value: "top_p_min"
      }
      input_map {
        key: "top_p_reset_ids"
        value: "top_p_reset_ids"
      }
      output_map {
        key: "output_ids"
        value: "output_ids"
      }
      output_map {
        key: "sequence_length"
        value: "sequence_length"
      }
      output_map {
        key: "response_input_lengths"
        value: "response_input_lengths"
      }
      output_map {
        key: "cum_log_probs"
        value: "cum_log_probs"
      }
      output_map {
        key: "output_log_probs"
        value: "output_log_probs"
      }
    }   
  ]
}
